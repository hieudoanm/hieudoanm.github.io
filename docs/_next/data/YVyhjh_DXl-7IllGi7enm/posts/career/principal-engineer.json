{"pageProps":{"postData":{"id":"career/principal-engineer","name":"Principal Engineer","title":"Principal Engineer","date":"2025-06-13","contentHtml":"<h2>📚 Table of Contents</h2>\n<ul>\n<li><a href=\"#-table-of-contents\">📚 Table of Contents</a></li>\n<li><a href=\"#-back-end\">🔧 Back-end</a>\n<ul>\n<li><a href=\"#-microservices-architecture\">🧱 Microservices Architecture</a></li>\n<li><a href=\"#%EF%B8%8F-java--spring-boot\">☕️ Java + Spring Boot</a></li>\n<li><a href=\"#%EF%B8%8F-apache-kafka\">⚙️ Apache Kafka</a></li>\n<li><a href=\"#-postgresql\">🛢 PostgreSQL</a></li>\n</ul>\n</li>\n<li><a href=\"#-front-end\">🖼 Front-end</a>\n<ul>\n<li><a href=\"#%EF%B8%8F-react\">⚛️ React</a></li>\n<li><a href=\"#-graphql\">🔗 GraphQL</a></li>\n</ul>\n</li>\n<li><a href=\"#%EF%B8%8F-3-devops-and-infrastructure\">☁️ 3. DevOps and Infrastructure</a>\n<ul>\n<li><a href=\"#-harness-cicd\">🔄 Harness CI/CD</a></li>\n<li><a href=\"#%EF%B8%8F-aws\">☁️ AWS</a></li>\n</ul>\n</li>\n</ul>\n<h2>🔧 Back-end</h2>\n<h3>🧱 Microservices Architecture</h3>\n<ul>\n<li>Principles: Domain-driven design (DDD), loose coupling, high cohesion, bounded contexts.</li>\n<li>Service communication: REST vs. gRPC, Kafka (event-driven), synchronous vs. asynchronous flows.</li>\n<li>Common patterns: API Gateway, Circuit Breaker, Saga/Orchestration, CQRS, Service Registry (e.g., Eureka), Config Server.</li>\n<li>Deployment: Independent service deployments, blue/green or canary releases.</li>\n</ul>\n<h3>☕️ Java + Spring Boot</h3>\n<ul>\n<li>Core knowledge:\n<ul>\n<li>Spring Boot Autoconfiguration, Profiles, Actuators</li>\n<li>Dependency injection with Spring Framework</li>\n<li>Exception handling, validation, and AOP</li>\n</ul>\n</li>\n<li>Advanced topics:\n<ul>\n<li>Spring Cloud: Config, Discovery, Gateway</li>\n<li>Reactive programming (WebFlux) – especially with Kafka or streaming</li>\n<li>Observability with Spring Boot: Micrometer, Prometheus, Zipkin</li>\n</ul>\n</li>\n</ul>\n<h3>⚙️ Apache Kafka</h3>\n<ul>\n<li>Concepts:\n<ul>\n<li>Topics, partitions, consumer groups, offset management</li>\n<li>At-least-once vs. exactly-once semantics</li>\n</ul>\n</li>\n<li>Use Cases: Event sourcing, change data capture (CDC), stream processing</li>\n<li>Tools: Kafka Streams, Kafka Connect, schema registry (e.g., Avro with Confluent)</li>\n</ul>\n<h3>🛢 PostgreSQL</h3>\n<ul>\n<li>Schema design: normalization, indexing, constraints, partitioning</li>\n<li>Performance: query optimization (EXPLAIN ANALYZE), caching strategies, connection pooling (HikariCP)</li>\n<li>Advanced: JSONB support, full-text search, triggers, stored procedures</li>\n<li>Scaling: Replication, sharding, and failover</li>\n</ul>\n<h2>🖼 Front-end</h2>\n<h3>⚛️ React</h3>\n<ul>\n<li>Architecture: Micro frontends (MFEs), independent deployability, cross-app communication</li>\n<li>Patterns:\n<ul>\n<li>Component-driven design (Storybook, Atomic Design)</li>\n<li>State management (Redux, Zustand, or React Query)</li>\n<li>Code splitting, lazy loading, and performance optimization</li>\n</ul>\n</li>\n<li>Testing: Unit (Jest), integration (React Testing Library), E2E (Playwright/Cypress)</li>\n</ul>\n<h3>🔗 GraphQL</h3>\n<ul>\n<li>Design: Schema-first vs. code-first, queries, mutations, subscriptions</li>\n<li>Tooling: Apollo Client/Server, caching, batching</li>\n<li>Security: Depth limiting, query complexity analysis</li>\n<li>Performance: N+1 problem and dataloader pattern, persisted queries</li>\n</ul>\n<h2>☁️ 3. DevOps and Infrastructure</h2>\n<h3>🔄 Harness CI/CD</h3>\n<ul>\n<li>Pipelines: Understand workflows, GitOps, triggers, rollback strategies</li>\n<li>Templates and Reuse: Use of YAML templates, stages, and approval gates</li>\n<li>Governance: RBAC, policy enforcement, secrets management</li>\n<li>Integration: With artifact repositories (e.g., Artifactory), test tools, monitoring</li>\n</ul>\n<h3>☁️ AWS</h3>\n<ul>\n<li>Core services:\n<ul>\n<li>Compute: EC2, ECS/EKS, Lambda (for serverless microservices)</li>\n<li>Networking: VPC, ALB/NLB, Route53, PrivateLink, NAT Gateways</li>\n<li>Storage: S3, EBS, EFS</li>\n<li>Databases: RDS (PostgreSQL), DynamoDB, ElastiCache</li>\n</ul>\n</li>\n<li>Security: IAM roles/policies, security groups, KMS, secrets manager</li>\n<li>DevOps on AWS: CloudWatch, CloudTrail, X-Ray, Systems Manager</li>\n<li>IaC: Terraform vs. AWS CDK, CloudFormation</li>\n</ul>\n"},"relatedPosts":[{"id":"career/principal-engineer","title":"Principal Engineer","date":"2025-06-13"},{"id":"career/resume","title":"Resume","date":"2025-05-01"},{"id":"career/computational-neuroscience","title":"Computational Neuroscience","date":"2025-04-19"}]},"__N_SSG":true}